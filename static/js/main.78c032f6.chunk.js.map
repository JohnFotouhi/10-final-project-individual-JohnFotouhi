{"version":3,"sources":["ResumeItem.js","Minesweeper.js","App.js","serviceWorker.js","index.js"],"names":["ResumeItem","props","react_default","a","createElement","Card","style","margin","paddingLeft","paddingBottom","paddingTop","CardTitle","fontWeight","header","CardSubtitle","color","subHeader","CardText","text","map","item","Minesweeper","_useState","useState","_useState2","Object","slicedToArray","board","setBoard","_useState3","Array","apply","_useState4","boardCovers","setBoardCovers","_useState5","_useState6","cells","setCells","_useState7","_useState8","updateToggle","setupdateToggle","bomb","index_esm","marginTop","flag","explosion","_useState9","_useState10","firstClick","setFirstClick","_useState11","_useState12","newGame","setNewGame","_useState13","_useState14","show","setShow","getAdjacent","ind","includeDiagonals","adjacentIndeces","push","filter","value","index","arr","toggleFlag","newBoardCovers","revealAdjacent","adjacent","i","length","useEffect","newBoard","bombCount","Math","floor","random","adjacentBombs","j","console","log","newCells","x","esm_Button","borderRadius","borderColor","height","width","key","onClick","bombAdjacent","bombAdjacentCount","handleClick","onContextMenu","e","preventDefault","variant","cursor","num","Fragment","Navbar","expand","dark","marginBottom","NavbarBrand","react_router_dom","to","Nav","className","NavLink","light","textAlign","Container","fluid","padding","borderWidth","borderStyle","row","rowIndex","Row","cell","marginLeft","Modal","onHide","Body","App","advice","setAdvice","resumeItems","getNewAdvice","xhttp","XMLHttpRequest","onreadystatechange","this","readyState","status","adv","JSON","parse","responseText","slip","open","send","div","position","left","Col","textDecoration","src_ResumeItem","src","title","frameborder","allow","allowfullscreen","CardBody","Button","Boolean","window","location","hostname","match","ReactDOM","render","react_router","exact","path","element","src_App","src_Minesweeper","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.78c032f6.chunk.js","sourcesContent":["import React, { Component, Fragment, useEffect, useState } from 'react';\r\nimport {\r\n    ListGroup, ListGroupItem, Container, Row, Col, Navbar, NavbarBrand, Nav, NavItem, NavLink, Card, CardBody, CardTitle, CardSubtitle, CardText, Button\r\n} from 'reactstrap';\r\n\r\nfunction ResumeItem (props){\r\n    return(\r\n            <Card style={{margin: \"10px\", paddingLeft: \"10px\", paddingBottom:\"5px\", paddingTop:\"5px\"}}>\r\n                <CardTitle style={{fontWeight: \"bold\"}}>\r\n                    {props.header}\r\n                </CardTitle>\r\n                <CardSubtitle style={{color: \"gray\"}}>\r\n                    {props.subHeader}\r\n                </CardSubtitle>\r\n                <CardText>\r\n                    <ul>\r\n                        {props.text.map((item) => <li>{item}</li>)}\r\n                    </ul>\r\n                </CardText>\r\n            </Card>\r\n    );\r\n}\r\n\r\nexport default ResumeItem;  ","import React, { Component, Fragment, useEffect, useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport {\r\n  ListGroup, ListGroupItem, Container, Row, Col, Navbar, NavbarBrand, Nav, NavItem, NavLink, Card, CardBody, CardTitle, CardSubtitle, CardText, Collapse\r\n} from 'reactstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { FaBomb, FaFlag, FaAsterisk } from \"react-icons/fa\";\r\nimport { Route, Routes, Link } from \"react-router-dom\";\r\nimport App from './App';\r\n\r\n\r\nfunction Minesweeper(props){\r\n    const [board, setBoard] = useState([]);\r\n    const [boardCovers, setBoardCovers] = useState(Array.apply(null, Array(480)).map(function () {return 1}));\r\n    const [cells, setCells] = useState([]);\r\n    const [updateToggle, setupdateToggle] = useState(false);\r\n    const rows = [0, 30, 60, 90, 120, 150, 180, 210, 240, 270, 300, 330, 360, 390, 420, 450];\r\n    const bomb = <FaBomb style={{margin:\"-5px\", marginTop:\"-15px\"}}/>;\r\n    const flag = <FaFlag style={{margin:\"-5px\", marginTop:\"-15px\"}}/>;\r\n    const explosion = <FaAsterisk style={{margin:\"-5px\", marginTop:\"-15px\"}}/>\r\n    const [firstClick, setFirstClick] = useState(true);\r\n    const [newGame, setNewGame] = useState(true);\r\n    const [show, setShow] = useState(false);\r\n    \r\n\r\n    useEffect(() => {\r\n        var newBoard = Array.apply(null, Array(480)).map(function () {return 0});\r\n        var newBoardCovers = Array.apply(null, Array(480)).map(function () {return 1});\r\n        var bombCount = 0;\r\n        while (bombCount < 100){\r\n            var ind = Math.floor(Math.random() * 481);\r\n            if(newBoard[ind] !== -1){\r\n                newBoard[ind] = -1;\r\n                ++bombCount;\r\n            }\r\n        }\r\n        for(var i = 0; i < 480; ++i){\r\n            var adjacentBombs = 0;\r\n            if(newBoard[i] === -1)continue;\r\n            var adjacent = getAdjacent(i, true);\r\n            for(var j = 0; j < adjacent.length; ++j){\r\n                if(newBoard[adjacent[j]] === -1)++adjacentBombs;\r\n            }\r\n            newBoard[i] = adjacentBombs;\r\n        }\r\n        setBoardCovers(newBoardCovers);\r\n        setBoard(newBoard);\r\n        setupdateToggle(!updateToggle);\r\n        console.log(newBoard);\r\n    }, [newGame]);\r\n\r\n    useEffect(() => {\r\n        var newCells = Array.apply(null, Array(480)).map(function (x, i) {\r\n            if(boardCovers[i] === 1){\r\n                return(\r\n                    <Button style={{borderRadius:\"0\", borderColor:\"black\", height:\"30px\", width:\"30px\"}} key={i} onClick={() => handleClick(i)} onContextMenu={(e) => {e.preventDefault(); toggleFlag(i)}}></Button>\r\n                );\r\n            }\r\n            else if(boardCovers[i] === 2){\r\n                return(\r\n                    <Button style={{borderRadius:\"0\", borderColor:\"black\", height:\"30px\", width:\"30px\"}} key={i} onContextMenu={(e) => {e.preventDefault(); toggleFlag(i)}}>\r\n                        {flag}\r\n                    </Button>\r\n                );\r\n            }\r\n            else{\r\n                //uncovered\r\n                return(\r\n                    <Button variant=\"light\" style={{borderRadius:\"0\", borderColor:\"black\", height:\"30px\", width:\"30px\", cursor:\"default\"}} key={i}>\r\n                        {\r\n                            getIcon(board[i])\r\n                        }\r\n                    </Button>\r\n                );\r\n            }\r\n        });\r\n        setCells(newCells);\r\n    }, [updateToggle]);\r\n\r\n    function getAdjacent(ind, includeDiagonals){\r\n        var adjacentIndeces = [];\r\n        adjacentIndeces.push(ind - 30);\r\n        adjacentIndeces.push(ind + 30);\r\n        if(ind % 30 !== 0){\r\n            if(includeDiagonals)adjacentIndeces.push(ind - 31, ind + 29)\r\n            adjacentIndeces.push(ind - 1);\r\n        }\r\n        if((ind + 1) % 30 !== 0){\r\n            adjacentIndeces.push(ind + 1);\r\n            if(includeDiagonals) adjacentIndeces.push(ind - 29, ind + 31);\r\n        }\r\n        adjacentIndeces = adjacentIndeces.filter(function(value, index, arr){\r\n            return (value < 480 && value > 0);\r\n        });\r\n        return adjacentIndeces;\r\n    }\r\n\r\n    function toggleFlag(ind){\r\n        var newBoardCovers = boardCovers;\r\n        newBoardCovers[ind] = newBoardCovers[ind] === 2 ? 1 : 2;\r\n        setBoardCovers(newBoardCovers);\r\n        setupdateToggle(!updateToggle);\r\n    }\r\n\r\n    function getIcon(num){\r\n        if(num === -1) return bomb;\r\n        else if(num === -2)return explosion;\r\n        else if(num === 0)return \"\";\r\n        else return num;\r\n    }\r\n    \r\n    function revealAdjacent(index){\r\n        var newBoardCovers = boardCovers;\r\n        newBoardCovers[index] = 0;\r\n        var adjacent = getAdjacent(index, true);\r\n        var adjacentNoDiagonal = getAdjacent(index, false);\r\n        for(var i = 0; i < adjacent.length; ++i){\r\n            if(boardCovers[adjacent[i]] === 1){\r\n                if(board[adjacent[i]] !== 0 && board[adjacent[i]] !== -1){\r\n                    newBoardCovers[adjacent[i]] = 0;\r\n                }\r\n                else if(board[adjacent[i]] === 0){\r\n                    revealAdjacent(adjacent[i]);\r\n                }\r\n            }\r\n        }\r\n        setBoardCovers(newBoardCovers);\r\n        setupdateToggle(!updateToggle);\r\n    }\r\n\r\n    function win(){\r\n        \r\n    }\r\n\r\n    function handleClick(index){\r\n        if(firstClick){\r\n            console.log(index);\r\n            var newBoard = board;\r\n            var adjacent = getAdjacent(index, true);\r\n            //adjacent.push(index);\r\n            for(var i = 0; i < adjacent.length; ++i){\r\n                if(newBoard[adjacent[i]] === -1){\r\n                    var bombAdjacent = getAdjacent(adjacent[i], true);\r\n                    var bombAdjacentCount = 0;\r\n                    for(var j = 0; j < bombAdjacent.length; ++j){\r\n                        if(newBoard[bombAdjacent[j]] !== -1 && newBoard[bombAdjacent[j]] !== 0){\r\n                            console.log(\"decreased \" + bombAdjacent[j] + \" because of \" + adjacent[i]);\r\n                            newBoard[bombAdjacent[j]] = newBoard[bombAdjacent[j]] - 1;\r\n                        }\r\n                        if(newBoard[bombAdjacent[j]] === -1){\r\n                            ++ bombAdjacentCount;\r\n                        }\r\n                    }\r\n                    newBoard[adjacent[i]] = bombAdjacentCount;\r\n                }\r\n            }\r\n            setBoard(newBoard);\r\n            revealAdjacent(index);\r\n            setFirstClick(false);\r\n        }\r\n        else if(board[index] === -1){\r\n            //game over\r\n            var newBoardCovers = boardCovers;\r\n            for(var i = 0; i < 480; ++i){\r\n                newBoardCovers[i] = 0;\r\n            }\r\n            setBoardCovers(newBoardCovers);\r\n            setupdateToggle(!updateToggle);\r\n            setShow(true);\r\n        }\r\n        else if(board[index] === 0){\r\n            //reveal all adjacent empty spaces\r\n            revealAdjacent(index);\r\n        }\r\n        else{\r\n            //is a number\r\n            var newBoardCovers = boardCovers;\r\n            newBoardCovers[index] = 0;\r\n            setBoardCovers(newBoardCovers);\r\n            setupdateToggle(!updateToggle);\r\n            \r\n        }\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <Navbar expand=\"lg\" color=\"dark\" dark style={{marginBottom: \"30px\"}}>\r\n            <NavbarBrand><Link to=\"/\">John Fotouhi</Link></NavbarBrand>\r\n            <Nav className=\"me-auto\">\r\n            <NavLink light><Link to=\"/\">Resume</Link></NavLink>\r\n            <NavLink ><Link to=\"/minesweeper\">Minesweeper</Link></NavLink>\r\n            </Nav>\r\n        </Navbar>\r\n        <h1 style={{width:\"100%\", textAlign:\"center\"}} >Minesweeper</h1>\r\n        <Container fluid style={{padding:\"0\", marginBottom:\"40px\", borderColor:\"black\", borderWidth:\"1px\", borderStyle:\"solid\", width:\"902px\"}}>\r\n            {rows.map((row, rowIndex) => {\r\n                return(\r\n                    <Row key={rowIndex} style={{margin:\"0\", padding:\"0\"}}>\r\n                    {cells.map((cell, index) => {\r\n                        if(index >= row && index < row + 30)return cell\r\n                    })}\r\n                    </Row>\r\n                );\r\n            })}\r\n        </Container>\r\n        <Button style={{margin:\"20px\", marginLeft:\"25%\"}} onClick={() => {setFirstClick(true); setNewGame(!newGame); }}>New Game</Button>\r\n        <Modal show={show} onHide={() => setShow(false)}>\r\n            <Modal.Body>You Lost</Modal.Body>\r\n        <Button variant=\"primary\" onClick={() => setShow(false)}>\r\n            Close\r\n          </Button>\r\n        </Modal>\r\n        \r\n        </>\r\n    );\r\n}\r\n\r\n/**TODO: Remove bombs surrounding first click */\r\n\r\nexport default Minesweeper;","import React, { Component, Fragment, useEffect, useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport {\r\n  ListGroup, ListGroupItem, Container, Row, Col, Navbar, NavbarBrand, Nav, NavItem, NavLink, Card, CardBody, CardTitle, CardSubtitle, CardText, Button, Collapse\r\n} from 'reactstrap';\r\nimport ResumeItem from './ResumeItem';\r\nimport { Route, Routes, Link } from \"react-router-dom\";\r\nimport Minesweeper from './Minesweeper';\r\n\r\n\r\nfunction App(props) {\r\n\r\n  const [advice, setAdvice] = useState();\r\n  const resumeItems = [[\"Coursework Includes: Data Structures and Algorithms, Object Oriented Programming, Web Development, Data Science\", \"Army ROTC: Served as a team leader overseeing four subordinates.\"], [\"Eagle Scout: Elected by peers for the highest leadership position in the troop.\", \"Class President: Increased peer tutoring enrollment by 10X.\"], [\"Worked with Docker and Kubernetes on the Azure team.\"], [\"Worked on a website for project managers to report safety incidents.\", \"Used React for the front end and ASP.NET, SQL, and C# for the back end, as well as Azure DevOps.\"], [\"Used Python, Excel, and Salesforce to analyze and track agent activity.\", \"Automated agent management such that a position was able to be reduced from approximately 6 hours per day to less than one hour per day.\"], [\"Built personal connections with callers of all backgrounds while triaging multiple calls, writing detailed reports for each one, and working with other agencies to send resources to the caller when necessary.\"], [\"Designed an android application with a backtracking algorithm in Java to solve Sudoku puzzles, published to Google Play store.\"], [\"Built a replica of Linked List, Hash Table, and AVL tree using Java.\"]];\r\n  const explosion = <i class=\"glyphicon glyphicon-flag\"></i>;\r\n  const flag = <i class=\"glyphicon glyphicon-asterisk\"></i>;\r\n  const bomb = <i class=\"glyphicon glyphicon-screenshot\"></i>;\r\n\r\n  function getNewAdvice(){\r\n    var xhttp = new XMLHttpRequest();\r\n    xhttp.onreadystatechange = function(){\r\n      if(this.readyState === 4 && this.status === 200){\r\n        var adv = JSON.parse(this.responseText);\r\n        //console.log(this.responseText);\r\n        //console.log(adv);\r\n        setAdvice(adv.slip.advice);\r\n      }\r\n    }\r\n    xhttp.open(\"GET\", \"https://api.adviceslip.com/advice\");\r\n    //xhttp.open(\"GET\", \"https://ghibliapi.herokuapp.com/people\");\r\n    xhttp.send();\r\n  }\r\n\r\n  useEffect( () => {\r\n    getNewAdvice();\r\n  }, []);\r\n\r\n  return (\r\n    <>    \r\n    <Navbar expand=\"lg\" color=\"dark\" dark style={{marginBottom: \"30px\"}}>\r\n    <NavbarBrand><Link to=\"/\">John Fotouhi</Link></NavbarBrand>\r\n    <Nav className=\"me-auto\">\r\n      <NavLink light><Link to=\"/\">Resume</Link></NavLink>\r\n      <NavLink ><Link to=\"/minesweeper\">Minesweeper</Link></NavLink>\r\n    </Nav>\r\n    </Navbar>\r\n    <Row div style={{position: \"absolute\", left:\"5%\", width:\"95%\"}}>\r\n      <Col>\r\n        <Card style={{ width: '35rem', margin: '10px' }}>\r\n          <CardTitle style={{textAlign: \"center\", marginTop: \"10px\", marginBottom: \"-5px\", fontWeight: \"Bold\", textDecoration: \"underline\"}}>Education</CardTitle>\r\n          <CardText style={{padding:\"10px\"}}>\r\n              <ResumeItem header=\"Washington University in St. Louis\" subHeader=\"Computer Science - 3.9 GPA\" text={resumeItems[0]}/>\r\n              <ResumeItem header=\"De Smet Jesuit High School\" subHeader=\"4.7 GPA\" text={resumeItems[1]}/>\r\n          </CardText>\r\n        </Card>\r\n        <Card style={{ width: '35rem', margin: '10px' }}>\r\n          <CardTitle style={{textAlign: \"center\", marginTop: \"10px\", marginBottom: \"-5px\", fontWeight: \"Bold\", textDecoration: \"underline\"}}>Experience</CardTitle>\r\n          <CardText style={{padding:\"10px\"}}>\r\n              <ResumeItem header=\"Microsoft\" subHeader=\"Software Engineer Internship\" text={resumeItems[2]}/>\r\n              <ResumeItem header=\"Clayco\" subHeader=\"Software Engineer Internship\" text={resumeItems[3]}/>\r\n              <ResumeItem header=\"The Gellman Team\" subHeader=\"IT Internship\" text={resumeItems[4]}/>\r\n              <ResumeItem header=\"Provident Crisis Services\" subHeader=\"Suicide Hotline Crisis Counselor\" text={resumeItems[5]}/>\r\n          </CardText>\r\n        </Card>\r\n        <Card style={{ width: '35rem', margin: '10px' }}>\r\n          <CardTitle style={{textAlign: \"center\", marginTop: \"10px\", marginBottom: \"-5px\", fontWeight: \"Bold\", textDecoration: \"underline\"}}>Personal Projects</CardTitle>\r\n          <CardText style={{padding:\"10px\"}}>\r\n              <ResumeItem header=\"Sudoku Solver Android Application\" subHeader=\"Personal Project\" text={resumeItems[6]}/>\r\n              <ResumeItem header=\"Data Structures and Algorithms Implementations\" subHeader=\"School Project\" text={resumeItems[7]}/>\r\n          </CardText>\r\n        </Card>\r\n      </Col>\r\n      <Col>\r\n        <iframe style={{margin: '10px'}} width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/pKO9UjSeLew\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\r\n        <Card style={{ width: '35rem', margin: '10px'  }}>\r\n          <CardBody>\r\n            <CardText>{advice}</CardText>\r\n            <Button onClick={getNewAdvice}>New Quote</Button>\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n    \r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {\r\n    HashRouter as Router,\r\n    Route,\r\n    Routes\r\n  } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport Minesweeper from './Minesweeper';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <Router>\r\n    <Routes>\r\n      <Route exact path=\"/\" element={<App />} />\r\n      <Route path=\"/minesweeper\" element={<Minesweeper/>}/>\r\n    </Routes>\r\n  </Router>,\r\ndocument.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}